{"remainingRequest":"/home/wagner/FONTES/angular/angular-food-delivery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/wagner/FONTES/angular/angular-food-delivery/node_modules/rxjs/_esm5/internal/util/isObservable.js","dependencies":[{"path":"/home/wagner/FONTES/angular/angular-food-delivery/node_modules/rxjs/_esm5/internal/util/isObservable.js","mtime":499162500000},{"path":"/home/wagner/FONTES/angular/angular-food-delivery/node_modules/cache-loader/dist/cjs.js","mtime":1539047243078},{"path":"/home/wagner/FONTES/angular/angular-food-delivery/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1522755982000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\n/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isObservable.js.map\n",null]}